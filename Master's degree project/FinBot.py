from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.callback_data import CallbackData
from aiogram.dispatcher.filters.state import State, StatesGroup
#from aiogram.utils.emoji import emojize
import emoji

import requests
import re
from bs4 import BeautifulSoup

import pandas as pd
import time
import datetime, timedelta


API_TOKEN = '6260473010:AAE9WsOkxQ_Msa52mJ02n-0vJP6gvN5wVFI'
 
# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

class Form(StatesGroup):
   currencyState = State() 

#---------------------------------------------------------------------------------------------------------------------------------------------------------

# –∫–æ–º–∞–Ω–¥–∞ help
# –≤ –∏–¥–µ–∞–ª–µ, –¥–æ–±–∞–≤–∏—Ç—å –≤—Å—ë –æ—Å–Ω–æ–≤–Ω–æ–µ –≤ main –∫–∞–∫ InlineKeyboardButton 
# –¥–æ–±–∞–≤–∏—Ç—å /main - –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏?!!!
help_message = '''
   –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
   /start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
   /help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
   
   /links - –ø–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏
   /kurs_now [–∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∞—è –≤–∞–ª—é—Ç–∞]- –Ω—ã–Ω–µ—à–Ω–∏–π –∫—É—Ä—Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–π –≤–∞–ª—é—Ç—ã, –≤—ã–∑–æ–≤ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –≤—ã–¥–∞—Å—Ç –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –≤–∞–ª—é—Ç 
   /kurs [–∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∞—è –≤–∞–ª—é—Ç–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∞—è –¥–∞—Ç–∞] - –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –¥–∞—Ç—É, –¥–ª—è –ø—Ä–æ—à–µ–¥—à–µ–π –¥–∞—Ç—ã –≤–µ—Ä–Ω–µ—Ç —Ä–µ–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –≤—ã–∑–æ–≤ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –¥–∞—Ç—ã –≤—ã–¥–∞—Å—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ (–¥–ª—è usd, eur, cny)
   '''

@dp.message_handler(commands=['help'])
async def process_help_command(message: types.Message):
    await message.reply(help_message)

#---------------------------------------------------------------------------------------------------------------------------------------------------------

# –∫–æ–º–∞–Ω–¥–∞ start
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
   await message.reply('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n–Ø FinAnalysisBot!\n–ú–æ—ë –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ, –ø–æ–º–æ–≥–∞—Ç—å –≤—Å–µ–º –Ω—É–∂–¥–∞—é—â–∏–º—Å—è —É–∑–Ω–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.\n–î–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å –º–æ–∏–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –≤—ã–∑–æ–≤–∏—Ç–µ /help')

#---------------------------------------------------------------------------------------------------------------------------------------------------------

# –∫–æ–º–∞–Ω–¥–∞ links
links = InlineKeyboardMarkup(row_width=1)
linksButton1 = InlineKeyboardButton(text='–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç', url='https://www.cbr.ru/currency_base/daily/')
linksButton2 = InlineKeyboardButton(text='–ê–∫—Ü–∏–∏ –∏ –∫–æ—Ç–∏—Ä–æ–≤–∫–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è', url='https://www.banki.ru/investment/shares/?source=submenu_share')
linksButton3 = InlineKeyboardButton(text='–í–∫–ª–∞–¥—ã', url='https://www.banki.ru/products/deposits/?source=submenu_deposits')
links.add(linksButton1,linksButton2,linksButton3)
 
@dp.message_handler(commands='links')
async def url_command(message: types.Message):
   await message.answer('–û—Å–Ω–æ–≤–Ω—ã–µ —Å—Å—ã–ª–∫–∏:', reply_markup=links)

#---------------------------------------------------------------------------------------------------------------------------------------------------------


# —É–±–∏—Ä–∞–µ—Ç –≤—Å–µ —Å–∫–æ–±–æ—á–∫–∏, —Ç—ç–≥–∏ –∏ –ø—Ä–æ—á—É—é –µ—Ä—É–Ω–¥—É
def html_stripper(text):
    return re.sub('<[^<]+?>', '', str(text)) 

# –Ω–∞—Ö–æ–¥–∏—Ç –Ω—ã–Ω–µ—à–Ω–∏–π –∫—É—Ä—Å –∑–∞–ø—Ä–æ—à–µ–Ω–Ω–æ–π –≤–∞–ª—é—Ç—ã
def currentCurrency(currency):
#    return "???????????????? " + currency
   url = 'https://www.cbr.ru/currency_base/daily/'
    
   response = requests.get(url)
   #response.raise_for_status()
   soup = BeautifulSoup(response.text, 'lxml')

   cleanedSoup = html_stripper(soup.findAll('table', class_='data'))
   listCleanedSoup = cleanedSoup.split('\n\n')

   if __name__ == '__main__':
     print('–ö—É—Ä—Å ' + currency)
   f = False
   all_res = ''

   for el in listCleanedSoup:
      if re.findall(currency.lower(), el.lower()) != []:
         res = el.split('\n')
         all_res += res[2] +' '+ res[4] +': '+ res[5] +' –∫ '+ res[3] + '\n'
         f = True
       
   if f:
      return all_res
   else:
      return '–¢–∞–∫–∞—è –≤–∞–ª—é—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'


kurs_cb = CallbackData("currency_prefix", 'currency') 

def get_kb():
   kurs_now = InlineKeyboardMarkup(row_width=1)
   knButton1 = InlineKeyboardButton(text=emoji.emojize("üá∫üá∏") + ' USD', callback_data=kurs_cb.new(currency = 'USD'))
   knButton2 = InlineKeyboardButton(text=emoji.emojize('üá™üá∫') + ' EUR', callback_data=kurs_cb.new(currency = 'EUR'))
   knButton3 = InlineKeyboardButton(text=emoji.emojize("üá®üá≥") + ' CNY', callback_data=kurs_cb.new(currency = 'CNY'))
#   knButton4 = InlineKeyboardButton(text='–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞–ª—é—Ç—É', callback_data=kurs_cb.new(currency = 'other'))
   kurs_now.add(knButton1,knButton2,knButton3)  # ,knButton4
   return kurs_now;


# –∫–æ–º–∞–Ω–¥–∞ kurs_now
@dp.message_handler(commands='kurs_now')
async def url_command(message: types.Message):
   if int(len(message.text)) < 10:
      await message.answer('–£–∑–Ω–∞—Ç—å –Ω—ã–Ω–µ—à–Ω–∏–π –∫—É—Ä—Å', reply_markup=get_kb())
   else:
      print('!kurs_now\n', message.text)
      await message.answer(text = currentCurrency(message.text[10:]))


# !!!!!!!!!!!! –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç ! –Ω–µ –Ω—É–∂–Ω–æ
'''
@dp.callback_query_handler(kurs_cb.filter(currency='other'))
async def kbhandler(query: types.CallbackQuery, callback_data: dict):
   await bot.send_message(text = "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã", chat_id=query.from_user.id)
'''

@dp.callback_query_handler(kurs_cb.filter())
async def kbhandler(query: types.CallbackQuery, callback_data: dict):
   await bot.send_message(text = currentCurrency(callback_data.get("currency")), chat_id=query.from_user.id)
#   bot.edit_message_text(,
#query.from_user.id,
#query.message.message_id)

#---------------------------------------------------------------------------------------------------------------------------------------------------------

kurses = pd.read_csv('kurses.csv', ';')
#print(kurses)

# –Ω–∞—Ö–æ–¥–∏—Ç –Ω—ã–Ω–µ—à–Ω–∏–π –∫—É—Ä—Å –∑–∞–ø—Ä–æ—à–µ–Ω–Ω–æ–π –≤–∞–ª—é—Ç—ã
def currencyByDate(currency, d):
   supported_cur = ['USD', 'EUR', 'CNY']

   print('–ö—É—Ä—Å ' + currency)
   print('–î–∞—Ç–∞ ' + d)

   if currency.upper() not in supported_cur:
      return '–¢–∞–∫–∞—è –≤–∞–ª—é—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'


   today = datetime.date.today()
   day = datetime.date(int(d[6:10]),int(d[3:5]),int(d[:2]))  # –¥–ª—è '22.02.2022'

   if day < datetime.date(2022,1,1):
      return '–ù–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π —Ä–∞–Ω–Ω–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏'

   if day > today + datetime.timedelta(days=7):
      return '–°–ª–∏—à–∫–æ–º –¥–∞–ª–µ–∫–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ'

   res_row = kurses.loc[kurses['Date'] == d]
   print(res_row)
   answ = res_row[currency.upper()].reset_index(drop=True)
   print(answ.loc[0])

   return '–ö—É—Ä—Å ' + currency + ' ' + d + ': ' + str(float(re.sub(',','.',str(answ.loc[0]))))
   return '–ö—Ä—è'
       



# –∫–æ–º–∞–Ω–¥–∞ kurs
@dp.message_handler(commands='kurs')
async def url_command(message: types.Message):
   if int(len(message.text)) < 10:
      await message.answer(text = currentCurrency(message.text[6:9]))
      print('!kurs\n',message.text[6:9])
   else:
      print('!kurs\n',message.text)
      await message.answer(text = currencyByDate(message.text[6:9], message.text[10:]))



#---------------------------------------------------------------------------------------------------------------------------------------------------------

# –∫–æ–º–∞–Ω–¥–∞ main !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
mb = InlineKeyboardMarkup(row_width=1)
mainButton1 = InlineKeyboardButton(text='–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏', callback_data=links) # !!!!!!!!!!! –Ω–¥–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞–∞
# –∫—É—Ä—Å –≤–∞–ª—é—Ç
# –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏
mainButton2 = InlineKeyboardButton(text='–í–∫–ª–∞–¥—ã0', url='https://www.banki.ru/products/deposits/?source=submenu_deposits')
mb.add(mainButton1,mainButton2)
 
@dp.message_handler(commands='main')
async def url_command(message: types.Message):
   await message.answer('–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:', reply_markup=mb)

#---------------------------------------------------------------------------------------------------------------------------------------------------------

# –æ—Å–Ω–æ–≤–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è
@dp.message_handler()
async def echo(message: types.Message):
   await message.answer(message.text)

#---------------------------------------------------------------------------------------------------------------------------------------------------------

if __name__ == '__main__':
   executor.start_polling(dp, skip_updates=True)